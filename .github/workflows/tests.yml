name: Run lint and tests

on:
  push:
    tags-ignore:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Get dependencies cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-pip-packages-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-packages-

    - name: Install dependencies
      run: poetry install

    - name: Lint
      run: make lint

    - name: Type-check
      run: poetry run mypy --install-types --non-interactive yelpfusion

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Get dependencies cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-pip-packages-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-packages-

    - name: Install dependencies
      run: poetry install

    - name: Test
      run: poetry run pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
